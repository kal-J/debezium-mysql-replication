services:
  # Zookeeper - Required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "127.0.0.1:2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    restart: on-failure:5

  # Kafka - Message broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "127.0.0.1:9092:9092"
      - "127.0.0.1:29092:29092"
      - "127.0.0.1:9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 9097152
      KAFKA_REPLICA_FETCH_MAX_BYTES: 9097152
      KAFKA_TOPIC_MAX_MESSAGE_BYTES: 9097152
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - kafka-data:/var/lib/kafka
    restart: on-failure:5

  # Schema Registry - Manage and validate Kafka message schemas
  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    container_name: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry:8081/subjects || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - schema-registry-data:/etc/schema-registry
    restart: on-failure:5

  # Kafka Connect - Run Debezium connectors
  connect:
    image: quay.io/debezium/connect
    container_name: connect
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - "127.0.0.1:8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: "connect-configs"
      OFFSET_STORAGE_TOPIC: "connect-offsets"
      STATUS_STORAGE_TOPIC: "connect-status"
      KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
       # Set lower config storage cleanup values for better persistence
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
      # Enhanced persistence settings
      CONNECT_CONFIG_STORAGE_PARTITIONS: 1
      CONNECT_OFFSET_STORAGE_PARTITIONS: 25
      CONNECT_STATUS_STORAGE_PARTITIONS: 5
      CONNECT_OFFSET_COMMIT_INTERVAL_MS: 10000
      CONNECT_OFFSET_COMMIT_TIMEOUT_MS: 5000
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: "/kafka/connect,/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_TOPIC_CREATION_ENABLE: "true"
      CONNECT_ERRORS_TOLERANCE: "all"
      CONNECT_ERRORS_LOG_ENABLE: "true"
      CONNECT_ERRORS_LOG_INCLUDE_MESSAGES: "true"
      CONNECT_SESSION_TIMEOUT_MS: 30000
      CONNECT_HEARTBEAT_INTERVAL_MS: 3000
      # Recommend setting these to ensure connectors persist
      CONNECT_CONNECT_OFFSETS_COMMIT_INTERVAL_MS: 10000
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 9097152
    healthcheck:
      test: |
        curl --output /dev/null --silent --head --fail http://connect:8083/ && \
        curl --output /dev/null --silent --head --fail http://connect:8083/connectors
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - connect-data:/kafka/connect
      - connect-plugins:/kafka/connect/plugins
      # Optional: mount a directory for custom connector configurations
      - connect-config:/etc/kafka-connect/connector-config
      - connect_plugins:/usr/share/confluent-hub-components
    restart: unless-stopped

  # Kafka UI - Optional web UI for Kafka management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
      connect:
        condition: service_healthy
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083

volumes:
  # Persistent volumes for all services
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  schema-registry-data:
  connect-data:
  connect-plugins:
  connect-config:
  connect_plugins: